<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Product</title>
    <link rel="stylesheet" href="/admin.css">
    <link rel="stylesheet" href="/product_update.css">
    <link rel="stylesheet" href="/navbar.css">
    <link rel="stylesheet" href="/footer.css">
</head>

<body>
    {{>seller_header}}
    {{!-- <h1 class="entry">Hi {{nam2}}, this is admin page.</h1> --}}

    <div id="container">
        <h1 class="h1">Upload Product</h1>
        <form action="/upload_product" method="post" id="box" enctype="multipart/form-data">

            <p>Product Name:</p>
            <textarea name="productName" class="input" id="productName" required maxlength="300"></textarea>

            <p>Product Description:</p>
            <textarea name="productDescription" value="{{productDescription}}" class="input" id="productDescription"
                required maxlength="1000"></textarea>

            <p>Product Image:</p>
            <input type="file" name="image_link" class="input">
            {{!-- <textarea name="productImage" class="input" id="productImage" required></textarea> --}}




            <p>Product Category:</p>
            <select name="productCategory" id="productCategory" onchange="changeCategory()">
                <option value="">Select</option>
                {{#each distinctCategories}}
                <option value="{{this.categoryName}}">{{this.categoryName}}</option>
                {{/each}}
            </select>

            <div id="custom-attributes">
                <!-- Custom attributes will be dynamically generated here -->
            </div>





            {{!-- <div id="allCate" style="display: none;">[{{distinctCategories}}]</div>


            <div id="custom-attributes">
                {{#each distinctCategories}}
                <div id="{{this._id}}">
                    {{#each this.customAttributes}}
                    <input value="{{this.name}}" readonly>
                    <input>
                    {{/each}}
                </div>
                {{/each}}
            </div>
            <button type="button" id="add-attribute">Add Attribute</button> --}}


            <p>Stock:</p>
            <input type="number" name="stock" class="input" id="stock" required min="0" max="1000">

            <p>Threshold Stock:</p>
            <input type="number" name="threshold" class="input" id="threshold" required min="0" max="1000">

            <p>MRP Price:</p>
            <input type="number" name="price" class="input" id="price" required min="0" max="10000000"
                onkeyup="discount()">

            <p>Discounted Price:</p>
            <input type="number" name="discountedPrice" class="input" id="discountedPrice" min="0" max="10000000"
                onkeyup="discount()">

            <p>Discount Percentage:</p>
            <input type="number" name="discountPercentage" class="input" min="0" max="100" id="discountPercentage"
                required readonly>

            <input type="submit" id="submit" value="Add product">
        </form>
        <p class="err">{{err}}</p>
    </div>

    {{>footer}}
</body>

<script>
    function discount() {
        const price1 = parseFloat(document.getElementById('price').value);
        const discountedPrice1 = parseFloat(document.getElementById('discountedPrice').value);
        const discountPercentage1 = ((price1 - discountedPrice1) / price1) * 100;
        document.getElementById('discountPercentage').value = Math.round(discountPercentage1);
    }


    function changeCategory() {
        var selectElement = document.getElementById("productCategory");
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var categoryId = selectedOption.value;

        // Fetch custom attributes based on the selected category
        fetch(`/getCustomAttributes?categoryName=${categoryId}`)
            .then(response => response.json())
            .then(data => {
                const customAttributesContainer = document.getElementById('custom-attributes');
                customAttributesContainer.innerHTML = ''; // Clear previous custom attributes

                // Generate input fields for custom attributes
                var i=0;
                data.customAttributes.forEach(attribute => {
                    const attributeGroup = document.createElement('div');
                    attributeGroup.setAttribute("class","features");
                    attributeGroup.innerHTML = `
                            
                            <input type="text" class="name" value="${attribute.name}" name="customAttributes[${i}][name]" class="input" readonly>

                            <input type="text" class="value" name="customAttributes[${i}][value]" class="input">
                            
                        `;

                        
                    customAttributesContainer.appendChild(attributeGroup);
                    i++;
                });
            })
            .catch(error => {
                console.error('Error fetching custom attributes:', error);
            });
    }

</script>
<script src="/script/footer_position.js"></script>

</html>